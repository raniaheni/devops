pipeline {
    agent any
    stages {
        stage('welcome') {
            steps {
                echo 'hello'
            }
        }
        stage('test maven') {
            steps {
                sh 'mvn -version'
            }
        }
        
        stage('Checkout Git') {
            steps {
                echo 'pluggins ...'
                git branch: 'manelWALHA-5SAE1-G2', url: 'https://github.com/raniaheni/devops.git',credentialsId: '8b2286e4-a399-418c-a7e3-6c55da5e1a57' 
            }
        }
       
        stage('project clean & package') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Test and Generate Coverage') {
            steps {
                sh 'mvn test jacoco:report'
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                     // Update existing sonar-project.properties
                    sh '''
                    echo "sonar.projectKey=tn.esprit.spring:Foyer" >> sonar-project.properties
                    echo "sonar.java.coveragePlugin=jacoco" >> sonar-project.properties
                    echo "sonar.jacoco.reportPaths=target/jacoco.exec" >> sonar-project.properties
                    '''

                    // Run SonarQube analysis
                    sh 'mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar -Dsonar.java.binaries=target'
                
                }
            }
        }
        
        stage('Tests unitaires') {
            steps {
                sh 'mvn test -Dtest=tn.esprit.springTest.UniversiteServiceMockitoTest'
            }
        }
        
        
        stage('Pull from Docker Hub') {
            steps {
                sh "docker pull walhamanel/alpine:1.0.0"
            }
        }
        
        
        
    }
}
